{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useCallback, useEffect } from 'react'; // 스크롤하면 페이드인 하는 애니메이션\n\nexport const useScrollFadeIn = (direction, duration, delay) => {\n  _s();\n\n  // 해당 컴포넌트 가져오기\n  const element = useRef(); // direction 선택\n\n  const handleDirection = name => {\n    switch (name) {\n      case \"up\":\n        return \"translate3d(0, 50%, 0)\";\n\n      case \"down\":\n        return \"tranlate3d(0, -50%, 0)\";\n\n      case \"left\":\n        return \"translate3d(50%, 0, 0)\";\n\n      case \"right\":\n        return \"translate3d(-50%, 0, 0)\";\n\n      default:\n        return;\n    }\n  }; // 설정해둔 컴포넌트를 만날때마다 함수가 재실행되도록 callback하기\n\n\n  const onScroll = useCallback(_ref => {\n    let [entry] = _ref;\n    const {\n      current\n    } = element;\n\n    if (entry.isIntersecting) {\n      current.style.tansitionProperty = 'all';\n      current.style.transitionDuration = `${duration}s`;\n      current.style.transitionTimingFunction = \"cubic-bezier(0, 0, 0.2, 1)\";\n      current.style.opacity = 1;\n      current.style.tranform = \"translate3d(0, 0, 0)\";\n    }\n  }, [delay, duration]); // intersection-observer로 컴포넌트 위치 observe하기\n\n  useEffect(() => {\n    let observer;\n\n    if (element.current) {\n      observer = new IntersectionObserver(onScroll, {\n        threshold: 0.7\n      });\n      observer.observe(element.current);\n    }\n\n    return () => observer && observer.disconnect();\n  }, [onScroll]);\n  return {\n    ref: element,\n    style: {\n      opacity: 0,\n      transform: handleDirection(direction)\n    }\n  };\n};\n\n_s(useScrollFadeIn, \"4CwJbGX7KJwc6rAyDvNwLEtPkuc=\");","map":{"version":3,"names":["useRef","useCallback","useEffect","useScrollFadeIn","direction","duration","delay","element","handleDirection","name","onScroll","entry","current","isIntersecting","style","tansitionProperty","transitionDuration","transitionTimingFunction","opacity","tranform","observer","IntersectionObserver","threshold","observe","disconnect","ref","transform"],"sources":["C:/Users/Administrator/Desktop/App/Portfolio/src/hooks/useIntersectionObserver.js"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'react'\r\n\r\n// 스크롤하면 페이드인 하는 애니메이션\r\nexport const useScrollFadeIn = (direction, duration, delay) => {\r\n// 해당 컴포넌트 가져오기\r\nconst element = useRef()\r\n// direction 선택\r\nconst handleDirection = (name) => {\r\n\tswitch (name) {\r\n    \tcase \"up\":\r\n        \treturn \"translate3d(0, 50%, 0)\"\r\n        case \"down\": return \"tranlate3d(0, -50%, 0)\"\r\n        case \"left\": return \"translate3d(50%, 0, 0)\"\r\n        case \"right\": return \"translate3d(-50%, 0, 0)\"\r\n        default:\r\n        return;\r\n    }\r\n}\r\n\r\n// 설정해둔 컴포넌트를 만날때마다 함수가 재실행되도록 callback하기\r\nconst onScroll = useCallback(([entry])=>{\r\n\tconst { current } = element\r\n    if(entry.isIntersecting) {\r\n    \tcurrent.style.tansitionProperty = 'all'\r\n        current.style.transitionDuration = `${duration}s`\r\n        current.style.transitionTimingFunction = \"cubic-bezier(0, 0, 0.2, 1)\"\r\n        current.style.opacity = 1;\r\n        current.style.tranform = \"translate3d(0, 0, 0)\"\r\n    }\r\n}, [delay, duration])\r\n\r\n// intersection-observer로 컴포넌트 위치 observe하기\r\nuseEffect(()=>{\r\n\tlet observer\r\n    \r\n    if(element.current) {\r\n    \tobserver = new IntersectionObserver(onScroll, {threshold: 0.7})\r\n        observer.observe(element.current)\r\n        }\r\n        \r\n        return() => observer && observer.disconnect()\r\n}, [onScroll])\r\n\r\nreturn{ref: element, style: { opacity: 0, transform: handleDirection(direction) } }\r\n}"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,OAA/C,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,KAAgC;EAAA;;EAC/D;EACA,MAAMC,OAAO,GAAGP,MAAM,EAAtB,CAF+D,CAG/D;;EACA,MAAMQ,eAAe,GAAIC,IAAD,IAAU;IACjC,QAAQA,IAAR;MACI,KAAK,IAAL;QACI,OAAO,wBAAP;;MACD,KAAK,MAAL;QAAa,OAAO,wBAAP;;MACb,KAAK,MAAL;QAAa,OAAO,wBAAP;;MACb,KAAK,OAAL;QAAc,OAAO,yBAAP;;MACd;QACA;IAPP;EASA,CAVD,CAJ+D,CAgB/D;;;EACA,MAAMC,QAAQ,GAAGT,WAAW,CAAC,QAAW;IAAA,IAAV,CAACU,KAAD,CAAU;IACvC,MAAM;MAAEC;IAAF,IAAcL,OAApB;;IACG,IAAGI,KAAK,CAACE,cAAT,EAAyB;MACxBD,OAAO,CAACE,KAAR,CAAcC,iBAAd,GAAkC,KAAlC;MACGH,OAAO,CAACE,KAAR,CAAcE,kBAAd,GAAoC,GAAEX,QAAS,GAA/C;MACAO,OAAO,CAACE,KAAR,CAAcG,wBAAd,GAAyC,4BAAzC;MACAL,OAAO,CAACE,KAAR,CAAcI,OAAd,GAAwB,CAAxB;MACAN,OAAO,CAACE,KAAR,CAAcK,QAAd,GAAyB,sBAAzB;IACH;EACJ,CAT2B,EASzB,CAACb,KAAD,EAAQD,QAAR,CATyB,CAA5B,CAjB+D,CA4B/D;;EACAH,SAAS,CAAC,MAAI;IACb,IAAIkB,QAAJ;;IAEG,IAAGb,OAAO,CAACK,OAAX,EAAoB;MACnBQ,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBX,QAAzB,EAAmC;QAACY,SAAS,EAAE;MAAZ,CAAnC,CAAX;MACGF,QAAQ,CAACG,OAAT,CAAiBhB,OAAO,CAACK,OAAzB;IACC;;IAED,OAAM,MAAMQ,QAAQ,IAAIA,QAAQ,CAACI,UAAT,EAAxB;EACP,CATQ,EASN,CAACd,QAAD,CATM,CAAT;EAWA,OAAM;IAACe,GAAG,EAAElB,OAAN;IAAeO,KAAK,EAAE;MAAEI,OAAO,EAAE,CAAX;MAAcQ,SAAS,EAAElB,eAAe,CAACJ,SAAD;IAAxC;EAAtB,CAAN;AACC,CAzCM;;GAAMD,e"},"metadata":{},"sourceType":"module"}